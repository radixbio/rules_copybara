SOT_REPO = "{sotRepo}"
SOT_BRANCH = "{sotBranch}"
DESTINATION_REPO = "{destinationRepo}"
DESTINATION_BRANCH = "{destinationBranch}"
COMMITTER = "{committer}"
MODE = "{mode}"
LOCAL_SOT = "{localSot}"
PUSH_FILES = {push_files}
DEST_FILES = {destination_files}
PUSH_TRANSFORMATIONS = {push_transformations}
PR_TRANSFORMATIONS = {pr_transformations}
# Push workflow
core.workflow(
    name = "push",
    origin = git.origin(
#        url = LOCAL_SOT if LOCAL_SOT else SOT_REPO,
        url = SOT_REPO,
        ref = SOT_BRANCH,
    ),
    destination = git.github_destination(
        url = DESTINATION_REPO,
        push = DESTINATION_BRANCH,
    ),
    origin_files = PUSH_FILES,
    destination_files = DEST_FILES,
    authoring = authoring.pass_thru(default = COMMITTER),
    mode = MODE,
    transformations = [
#        metadata.restore_author("ORIGINAL_AUTHOR", search_all_changes = True),
#        metadata.expose_label("COPYBARA_INTEGRATE_REVIEW"),
    ] + PUSH_TRANSFORMATIONS if PUSH_TRANSFORMATIONS else core.reverse(PR_TRANSFORMATIONS),
)
